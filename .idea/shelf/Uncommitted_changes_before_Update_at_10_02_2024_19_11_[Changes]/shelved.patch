Index: NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package toulouse.miage.l3.nyx.core.model;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\nimport static toulouse.miage.l3.nyx.core.service.Utils.readChaine;\r\nimport static toulouse.miage.l3.nyx.core.service.Utils.readElement;\r\n\r\npublic class Usine {\r\n\r\n    private static ObservableList<Chaine> chaines = FXCollections.observableArrayList();\r\n    private static ObservableList<Map.Entry<Chaine, Integer>> chainesCommandes = FXCollections.observableArrayList();\r\n    public static ObservableList<Element> elements = FXCollections.observableArrayList();\r\n\r\n    public void chargerChaines() {\r\n        chaines.addAll(readChaine());\r\n    }\r\n    public void chargerElements() {\r\n        elements.addAll(readElement());\r\n    }\r\n\r\n    /* ===========================================\r\n     * FUNCTIONS FOR CHAINES\r\n     * =========================================== */\r\n\r\n    public static ObservableList<Chaine> getChaine() {\r\n        return chaines;\r\n    }\r\n\r\n    /* ===========================================\r\n     * FUNCTIONS FOR CHAINESCOMMANDES\r\n     * =========================================== */\r\n\r\n    public static void clearChainesCommandes() {\r\n        chainesCommandes.clear();\r\n    }\r\n\r\n    public static void addAllInChainesCommandes(Set<Map.Entry<Chaine, Integer>> chaines) {\r\n        chainesCommandes.addAll(chaines);\r\n    }\r\n\r\n    public static ObservableList<Map.Entry<Chaine, Integer>> getChainesCommandes() {\r\n        return chainesCommandes;\r\n    }\r\n\r\n    public static int getSizeChainesCommande() {\r\n        return chainesCommandes.size();\r\n    }\r\n\r\n    /* ===========================================\r\n     * FUNCTIONS FOR ELEMENTS\r\n     * =========================================== */\r\n\r\n    public static ObservableList<Element> getElements() {\r\n        return elements;\r\n    }\r\n\r\n    public static void addToElements(Element e) {\r\n        elements.add(e);\r\n    }\r\n\r\n    public static void removeToElement(Element e) {\r\n        elements.remove(e);\r\n    }\r\n\r\n    public static boolean elementsContains(Element e) {\r\n        return elements.contains(e);\r\n    }\r\n\r\n    public static int elementIndexOf(Element e) {\r\n        return elements.indexOf(e);\r\n    }\r\n\r\n    public static Element getElements(int index) {\r\n        return elements.get(index);\r\n    }\r\n\r\n    public static void addAllElement(List<Element> elementss) {\r\n        elements.addAll(elementss);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java b/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java	(date 1707389595054)
@@ -14,7 +14,7 @@
 
     private static ObservableList<Chaine> chaines = FXCollections.observableArrayList();
     private static ObservableList<Map.Entry<Chaine, Integer>> chainesCommandes = FXCollections.observableArrayList();
-    public static ObservableList<Element> elements = FXCollections.observableArrayList();
+    private static ObservableList<Element> elements = FXCollections.observableArrayList();
 
     public void chargerChaines() {
         chaines.addAll(readChaine());
Index: NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package toulouse.miage.l3.nyx.core.service;\r\n\r\nimport toulouse.miage.l3.nyx.core.model.Chaine;\r\nimport toulouse.miage.l3.nyx.core.model.Element;\r\nimport toulouse.miage.l3.nyx.core.model.Usine;\r\n\r\nimport java.io.*;\r\nimport java.nio.file.Paths;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.*;\r\n\r\nimport static toulouse.miage.l3.nyx.core.model.Usine.getChainesCommandes;\r\n\r\npublic class Utils {\r\n\r\n    /**\r\n     * Read every line of a file of element, parse these lines into Element,\r\n     * and add them to an ArrayList\r\n     * @return a table of elements read from the file element.csv\r\n     */\r\n    public static ArrayList<Element> readElement() {\r\n        String fileName = \"NYX/src/main/resources/toulouse/miage/l3/nyx/save/elements.csv\";\r\n        String line;\r\n        ArrayList<Element> element = new ArrayList<>();\r\n\r\n        try {\r\n            BufferedReader file = new BufferedReader(new FileReader(fileName));\r\n\r\n            while ((line = file.readLine()) != null) {\r\n                element.add(parseElement(line));\r\n            }\r\n\r\n            file.close();\r\n        } catch (IOException ex) {\r\n            System.out.println(\"Acces problem\");\r\n        }\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Parse a line in parameter with the format : code, name, quantity, unity, buy price, sell price\r\n     * into a new Element\r\n     *\r\n     * @param line : Here is an example of line : E001;Circuit principal;200;pieces;50;20\r\n     * @return : Return a new Element create with content of this line\r\n     */\r\n    private static Element parseElement(String line) {\r\n        String[] l = line.split(\";\");\r\n        return new Element(l[0], l[1], Double.parseDouble(l[2]), l[3], Double.parseDouble(l[4]), Double.parseDouble(l[5]));\r\n    }\r\n\r\n    /**\r\n     * Write on object Element into a file elements.csv\r\n     * @param e : table with every Element of the application\r\n     */\r\n    public static void writeElement(Element[] e) {\r\n        String fileName = \"NYX/src/main/resources/toulouse/miage/l3/nyx/save/elements.csv\";\r\n        try {\r\n            PrintWriter file = new PrintWriter(new FileWriter(fileName));\r\n\r\n            for (Element a : e) {\r\n                file.println(a.getCode() + \";\"\r\n                              + a.getNom() + \";\"\r\n                              + a.getQuantite() + \";\"\r\n                              + a.getUniteMesure() + \";\"\r\n                              + a.getPrixAchat() + \";\"\r\n                              + a.getPrixVente());\r\n            }\r\n\r\n            file.close();\r\n        } catch (IOException ex) {\r\n            System.out.println(\"File access problem\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read line of a file named chaines.csv, and transform these line into an object Chaine,\r\n     * add it to an Arraylist and return it\r\n     * @return : ArrayList with Chaine read from the file chaine.csv\r\n     */\r\n    public static ArrayList<Chaine> readChaine() {\r\n        String nomFichier = \"NYX/src/main/resources/toulouse/miage/l3/nyx/save/chaines.csv\";\r\n        String ligne;\r\n        ArrayList<Chaine> chaines = new ArrayList<>();\r\n\r\n        try {\r\n            BufferedReader fichier = new BufferedReader(new FileReader(nomFichier));\r\n\r\n            while ((ligne = fichier.readLine()) != null) {\r\n                chaines.add(parseChaine(ligne));\r\n            }\r\n\r\n            fichier.close();\r\n        } catch (IOException ex) {\r\n            System.out.println(\"Problème d'accès fichier\");\r\n        }\r\n        return chaines;\r\n    }\r\n\r\n\r\n    /**\r\n     * Parse a line in parameter with the format : Code;Nom;Entrée (code,qte);Sortie (code,qte)\r\n     * into a new Chaine\r\n     *\r\n     * @param line : Here is an example of line : C001;Propulsion;(E004,1),(E002,0.5),(E003,0.1);(E005,1)\r\n     * @return : Return a new Chaine create with content of this line\r\n     */\r\n    public static Chaine parseChaine(String line) {\r\n        String[] parts = line.split(\";\");\r\n\r\n        String code = parts[0];\r\n        String name = parts[1];\r\n\r\n        HashMap<Element, Double> inputElementList = parseElementList(parts[2]);\r\n        HashMap<Element, Double> outputElementList = parseElementList(parts[3]);\r\n\r\n        return new Chaine(code, name, inputElementList, outputElementList);\r\n    }\r\n\r\n    /**\r\n     * Parse an input in parameter with the format : (E004,1),(E002,0.5),(E003,0.1)\r\n     * into a Hashmap<Element, Double> and return it\r\n     *\r\n     * Before putting Element into the Hashmap, the function check if the Element exist in\r\n     * the list of Element, if not it print an error\r\n     *\r\n     * @param input : Here is an example of line : (E004,1),(E002,0.5),(E003,0.1)\r\n     * @return Hashmap which contains a list of Element and quantity attributed\r\n     */\r\n    private static HashMap<Element, Double> parseElementList(String input) {\r\n        HashMap<Element, Double> elementMap = new HashMap<>();\r\n        String[] elements = input.split(\",\");\r\n\r\n        for (int i = 0; i < elements.length; i += 2) {\r\n            String code = elements[i].replaceAll(\"[(]\", \"\");\r\n            Double value = Double.parseDouble(elements[i + 1].replaceAll(\"[)]\", \"\"));\r\n\r\n            Element existingElement = findElementByCode(Usine.elements, code);\r\n\r\n            if (existingElement != null) {\r\n                elementMap.put(existingElement, value);\r\n            } else {\r\n                System.err.println(\"Your Element does not exist\");\r\n            }\r\n        }\r\n        return elementMap;\r\n    }\r\n\r\n    /**\r\n     * Research, from a list of Element passed in parameter, an element which have the same code\r\n     * also passed in parameter. The function return the Element with the code.\r\n     * @param elements : list of element, in which you can retrieve every Element of the app\r\n     * @param code : unique code used like a primary key for the object Element\r\n     * @return : return the Element which contain this code/primary key\r\n     */\r\n    private static Element findElementByCode(List<Element> elements, String code) {\r\n        for (Element element : elements) {\r\n            if (element.getCode().equals(code)) {\r\n                return element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Write the object Element contains in a table chaines into a file chaine.csv\r\n     * @param chaines : table with every chaine of use by the application\r\n     */\r\n    public static void writeChaine(Chaine[] chaines) {\r\n        String fileName = \"chaine.csv\";\r\n        try {\r\n            PrintWriter file = new PrintWriter(new FileWriter(fileName));\r\n\r\n            for (Chaine chaine : chaines) {\r\n                file.println(chaine.getCode() + \";\"\r\n                           + chaine.getNom() + \";\"\r\n//                           + parseElementListIntoText(chaine.getFormattedListeEntree() + \";\"\r\n//                           + parseElementListIntoText(chaine.getFormattedListeSortie() + \";\"\r\n                );\r\n            }\r\n\r\n            file.close();\r\n        } catch (IOException ex) {\r\n            System.out.println(\"File access problem\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create new file, in which you can read every chaine in the arrayList listesCommande\r\n     * The file is in the repertory export\r\n     * It contains : the date of the commande, the content of the command and his quantity\r\n     * and the total price of the command with is percentage of result.\r\n     */\r\n    public static void writeResultInAFile() {\r\n        LocalDateTime dateTime = LocalDateTime.now();\r\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyyMMdd_HHmmss\");\r\n        String formattedDate = dateTime.format(formatter);\r\n\r\n        String nomFichier = Paths.get(\"NYX\", \"src\", \"main\", \"resources\", \"toulouse\", \"miage\", \"l3\", \"nyx\", \"save\", \"commande\", \"commande_\" + formattedDate + \".txt\").toString();\r\n\r\n\r\n        try {\r\n            PrintWriter fichier = new PrintWriter(new FileWriter(nomFichier));\r\n\r\n            fichier.println(\"Date de la commande : \" + LocalDateTime.now());\r\n            fichier.println(\"Le resultat des commandes est de : \" ); // mettre la valeur du résultat des commandes\r\n            fichier.println(\"La liste des commandes : \\n\");\r\n\r\n            for (Map.Entry<Chaine, Integer> entry : getChainesCommandes()) {\r\n                fichier.println(\"Chaîne : \" + entry.getKey().getCode() + \" - \" + entry.getKey().getNom());\r\n                fichier.println(\"Quantité : \" + entry.getValue());\r\n                fichier.println(\"Liste d'éléments d'entrée : \" + entry.getKey().getListeElementEntree());\r\n                fichier.println(\"Liste d'éléments de sortie : \" + entry.getKey().getListeElementSortie());\r\n            }\r\n\r\n            fichier.close();\r\n        } catch (IOException ex) {\r\n            System.out.println(\"File access problem\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java b/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java	(date 1707387783287)
@@ -136,7 +136,7 @@
             String code = elements[i].replaceAll("[(]", "");
             Double value = Double.parseDouble(elements[i + 1].replaceAll("[)]", ""));
 
-            Element existingElement = findElementByCode(Usine.elements, code);
+            Element existingElement = findElementByCode(Usine.getElements(), code);
 
             if (existingElement != null) {
                 elementMap.put(existingElement, value);
Index: NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package toulouse.miage.l3.nyx.controllers;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.cell.*;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Callback;\r\nimport toulouse.miage.l3.nyx.core.model.Chaine;\r\nimport toulouse.miage.l3.nyx.core.service.SceneUtils;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static toulouse.miage.l3.nyx.core.model.Usine.*;\r\n\r\npublic class AccueilController implements Initializable {\r\n\r\n    @FXML\r\n    private TableView<Chaine> chaineTableView;\r\n    @FXML\r\n    private TableColumn<Chaine, Integer> chaineCode;\r\n    @FXML\r\n    private TableColumn<Chaine, String> chaineNom;\r\n    @FXML\r\n    private TableColumn<Chaine, String> chaineEntree;\r\n    @FXML\r\n    private TableColumn<Chaine, String> chaineSortie;\r\n    @FXML\r\n    private TableColumn<Chaine, String> qte;\r\n    private Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n    private int currentQte;\r\n\r\n    private Map<Chaine, Integer> listeCommandeAccueil = new HashMap<>();\r\n\r\n    /**\r\n     * The application will load this function at the start when it's called\r\n     *\r\n     * The code will display a table view, with custom columns\r\n     *\r\n     * @param location\r\n     * The location used to resolve relative paths for the root object, or\r\n     * {@code null} if the location is not known.\r\n     *\r\n     * @param resources\r\n     * The resources used to localize the root object, or {@code null} if\r\n     * the root object was not localized.\r\n     */\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        currentQte = 0;\r\n        chaineCode.setCellValueFactory(new PropertyValueFactory<>(\"code\"));\r\n        chaineNom.setCellValueFactory(new PropertyValueFactory<>(\"nom\"));\r\n        chaineEntree.setCellValueFactory(new PropertyValueFactory<>(\"listeElementEntree\"));\r\n        chaineSortie.setCellValueFactory(new PropertyValueFactory<>(\"listeElementSortie\"));\r\n\r\n        // custom columns to increase or decrease the quantity wished by the user\r\n        Callback<TableColumn<Chaine, String>, TableCell<Chaine, String>> cellFoctory = (TableColumn<Chaine, String> param) -> {\r\n            final TableCell<Chaine, String> cell = new TableCell<Chaine, String>() {\r\n                @Override\r\n                public void updateItem(String item, boolean empty) {\r\n                    super.updateItem(item, empty);\r\n                    if (empty) {\r\n                        setGraphic(null);\r\n                        setText(null);\r\n                    } else {\r\n                        Button add = new Button(\"+\");\r\n                        Button less = new Button(\"-\");\r\n                        TextFieldTableCell tf = new TextFieldTableCell();\r\n                        tf.setText(String.valueOf(currentQte));\r\n                        tf.setStyle(\" -fx-cursor: hand ;\" + \"-glyph-size:50px;\" + \"-fx-fill:#ff1744;\" +\r\n                                    \"-fx-cell-size: 80px;\" + \"-fx-start-margin: 30px;\" + \"-fx-pref-width: 60px;\" +\r\n                                    \"-fx-alignment: center;\"\r\n                        );\r\n\r\n                        add.setStyle(\"-fx-cursor: hand;\" + \"-glyph-size:28px;\" + \"-fx-fill:#ff1744;\"+ \"-fx-border-radius: 50px;\");\r\n\r\n                        less.setStyle(\" -fx-cursor: hand ;\" + \"-glyph-size:28px;\" + \"-fx-fill:#00E676;\" + \"-fx-border-radius: 50px;\"\r\n                        );\r\n\r\n                        tf.setEditable(true);\r\n\r\n                        add.setOnAction(e -> {\r\n                            currentQte = Integer.parseInt(tf.getText());\r\n                            tf.setText(Integer.toString(currentQte + 1));\r\n                            listeCommandeAccueil.put(getTableView().getItems().get(getIndex()), Math.max(0, currentQte + 1));\r\n                        });\r\n\r\n                        less.setOnAction(e -> {\r\n                            currentQte = Integer.parseInt(tf.getText());\r\n                            tf.setText(Integer.toString(Math.max(0, currentQte - 1)));\r\n                            listeCommandeAccueil.put(getTableView().getItems().get(getIndex()), Math.max(0, currentQte - 1));\r\n                        });\r\n\r\n                        HBox managebtn = new HBox();\r\n                        managebtn.getChildren().addAll(add, tf, less);\r\n                        managebtn.setStyle(\"-fx-alignment:center\");\r\n\r\n                        setGraphic(managebtn);\r\n\r\n                        setText(null);\r\n                    }\r\n                }\r\n            };\r\n            return cell;\r\n        };\r\n        qte.setCellFactory(cellFoctory);\r\n        chaineTableView.setItems(getChaine());\r\n    }\r\n\r\n    /**\r\n     * Enable to change the scene from accueil to resultat\r\n     * @param actionEvent - click\r\n     */\r\n    public void goToResultat(ActionEvent actionEvent) throws IOException {\r\n        addAllInChainesCommandes(listeCommandeAccueil.entrySet());\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/resultat-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/resultat.css\", actionEvent);\r\n    }\r\n\r\n    /**\r\n     * Enable to change the scene from accueil to chaine de production\r\n     * @param actionEvent - click\r\n     */\r\n    public void goToChaineProduction(ActionEvent actionEvent) throws IOException {\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/chaineproduction-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/chaineproduction.css\", actionEvent);\r\n    }\r\n\r\n    /**\r\n     * Enable to change the scene from accueil to inventaire\r\n     * @param actionEvent - click\r\n     */\r\n    public void goToInventaire(ActionEvent actionEvent) throws IOException {\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/inventaire-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/inventaire.css\", actionEvent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java b/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java	(date 1707389595033)
@@ -13,6 +13,7 @@
 import javafx.util.Callback;
 import toulouse.miage.l3.nyx.core.model.Chaine;
 import toulouse.miage.l3.nyx.core.service.SceneUtils;
+import javafx.application.Application.Parameters;
 
 import java.io.IOException;
 import java.net.URL;
Index: NYX/src/main/java/toulouse/miage/l3/nyx/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package toulouse.miage.l3.nyx;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport toulouse.miage.l3.nyx.core.model.Usine;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class Main extends Application {\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n        try {\r\n            Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"/toulouse/miage/l3/nyx/fxml/accueil-view.fxml\")));\r\n            Scene scene = new Scene(root);\r\n            String css = this.getClass().getResource(\"/toulouse/miage/l3/nyx/style/accueil.css\").toExternalForm();\r\n            scene.getStylesheets().add(css);\r\n            stage.setTitle(\"NYX\");\r\n            stage.setScene(scene);\r\n            stage.setMinHeight(300);\r\n            stage.setMinWidth(500);\r\n            stage.show();\r\n\r\n            Usine usine = new Usine();\r\n            usine.chargerElements();\r\n            usine.chargerChaines();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java b/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java	(date 1707387783365)
@@ -12,6 +12,8 @@
 
 public class Main extends Application {
 
+    public Usine usine;
+
     @Override
     public void start(Stage stage) {
         try {
@@ -25,7 +27,7 @@
             stage.setMinWidth(500);
             stage.show();
 
-            Usine usine = new Usine();
+            usine = new Usine();
             usine.chargerElements();
             usine.chargerChaines();
 
Index: NYX/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n  <groupId>toulouse.miage.l3</groupId>\r\n  <artifactId>NYX</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <name>NYX</name>\r\n\r\n  <properties>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n<junit.version>5.10.0</junit.version>  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-controls</artifactId>\r\n      <version>17.0.6</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-fxml</artifactId>\r\n      <version>17.0.6</version>\r\n    </dependency>\r\n\r\n<dependency>\r\n      <groupId>org.junit.jupiter</groupId>\r\n      <artifactId>junit-jupiter-api</artifactId>\r\n      <version>${junit.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.junit.jupiter</groupId>\r\n      <artifactId>junit-jupiter-engine</artifactId>\r\n      <version>${junit.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>  </dependencies>\r\n\r\n  <build>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.11.0</version>\r\n        <configuration>\r\n          <source>17</source>\r\n          <target>17</target>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.openjfx</groupId>\r\n        <artifactId>javafx-maven-plugin</artifactId>\r\n        <version>0.0.8</version>\r\n        <executions>\r\n          <execution>\r\n            <!-- Default configuration for running with: mvn clean javafx:run -->\r\n            <id>default-cli</id>\r\n            <configuration>\r\n              <mainClass>toulouse.miage.l3.nyx/toulouse.miage.l3.nyx.Main</mainClass>\r\n              <launcher>app</launcher>\r\n              <jlinkZipName>app</jlinkZipName>\r\n              <jlinkImageName>app</jlinkImageName>\r\n              <noManPages>true</noManPages>\r\n              <stripDebug>true</stripDebug>\r\n              <noHeaderFiles>true</noHeaderFiles>\r\n            </configuration>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/pom.xml b/NYX/pom.xml
--- a/NYX/pom.xml	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/pom.xml	(date 1707339953286)
@@ -58,7 +58,7 @@
             <!-- Default configuration for running with: mvn clean javafx:run -->
             <id>default-cli</id>
             <configuration>
-              <mainClass>toulouse.miage.l3.nyx/toulouse.miage.l3.nyx.Main</mainClass>
+              <mainClass>toulouse.miage.l3.nyx.Main</mainClass>
               <launcher>app</launcher>
               <jlinkZipName>app</jlinkZipName>
               <jlinkImageName>app</jlinkImageName>
Index: NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Chaine.java 06/02/2024\r\n * Licence MIAGE, Université Paul Sabatier, pas de copyright, pas de droit d'auteur\r\n */\r\npackage toulouse.miage.l3.nyx.core.model;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport static toulouse.miage.l3.nyx.core.model.Usine.elements;\r\n\r\n/**\r\n * Class Chaines\r\n *\r\n * @author Guillaume Helg\r\n * @version 1.0\r\n */\r\npublic class Chaine {\r\n\r\n    /** code of chaine */\r\n    private String code;\r\n    /** name of the chain */\r\n    private String nom;\r\n    /** list of each element and his quantity needed by the chaine to create something */\r\n    protected HashMap<Element, Double> listeElementEntree;\r\n    /** list of each element we make by using this chaine */\r\n    private HashMap<Element, Double> listeElementSortie;\r\n    /** toString of the Hashmap listeElementEntree */\r\n    private String listeElementEntrees;\r\n    /** toString of the Hashmap listeElementSortie */\r\n    private String listeElementSorties;\r\n\r\n    /**\r\n     * Constructeur de la chaine (code),(nom),(listeElementEntree),(listeElementSortie)\r\n     * @param code :\r\n     * @param nom :\r\n     * @param listeElementEntree\r\n     * @param listeElementSortie\r\n     */\r\n    public Chaine(String code, String nom, HashMap<Element, Double> listeElementEntree, HashMap<Element, Double> listeElementSortie) {\r\n        this.code = code;\r\n        this.nom = nom;\r\n        this.listeElementEntree = listeElementEntree;\r\n        this.listeElementSortie = listeElementSortie;\r\n        this.listeElementEntrees = getFormattedListeEntree();\r\n        this.listeElementSorties = getFormattedListeSortie();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getCode() {\r\n        return code;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param code\r\n     */\r\n    public void setCode(String code) {\r\n        this.code = code;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getNom() {\r\n        return nom;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param nom\r\n     */\r\n    public void setNom(String nom) {\r\n        this.nom = nom;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getFormattedListeEntree() {\r\n        StringBuilder str = new StringBuilder();\r\n        for (Map.Entry<Element, Double> entry : listeElementEntree.entrySet()) {\r\n            str.append(entry.getKey().getCode());\r\n            str.append(\" * \");\r\n            str.append(entry.getValue());\r\n            str.append(\", \");\r\n        }\r\n        str.setLength(str.length() - 2);\r\n        return str.toString();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getFormattedListeSortie() {\r\n        StringBuilder str = new StringBuilder();\r\n        for (Map.Entry<Element, Double> entry : listeElementSortie.entrySet()) {\r\n            str.append(entry.getKey().getCode());\r\n            str.append(\" * \");\r\n            str.append(entry.getValue());\r\n            str.append(\", \");\r\n        }\r\n        str.setLength(str.length() - 2);\r\n        return str.toString();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getListeElementEntree() {\r\n        return getFormattedListeEntree();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String getListeElementSortie() {\r\n        return getFormattedListeSortie();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public String toString() {\r\n        String str = this.code + \"\\n\" + this.nom + \"\\n\" + this.getFormattedListeEntree() + \"\\n\" + this.getFormattedListeSortie();\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param qtt\r\n     * @return\r\n     */\r\n    public boolean isFeasible(int qtt) {\r\n        boolean feasible = false;\r\n\r\n        for (Map.Entry<Element, Double> currentElement : this.listeElementEntree.entrySet()) {\r\n            Element element = currentElement.getKey();\r\n            if (elements.contains(element)) {\r\n                int index = elements.indexOf(element);\r\n                elements.get(index).setQuantite(element.getQuantite()-(currentElement.getValue() * qtt));\r\n            } else {\r\n                System.out.println(\"Erreur, element inexistant\");\r\n            }\r\n\r\n            if (element.getQuantite() >= 0) {\r\n                feasible = true;\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        return feasible;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java b/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java	(date 1707387783505)
@@ -6,7 +6,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import static toulouse.miage.l3.nyx.core.model.Usine.elements;
+import static toulouse.miage.l3.nyx.core.model.Usine.*;
 
 /**
  * Class Chaines
@@ -144,9 +144,9 @@
 
         for (Map.Entry<Element, Double> currentElement : this.listeElementEntree.entrySet()) {
             Element element = currentElement.getKey();
-            if (elements.contains(element)) {
-                int index = elements.indexOf(element);
-                elements.get(index).setQuantite(element.getQuantite()-(currentElement.getValue() * qtt));
+            if (elementsContains(element)) {
+                int index = elementIndexOf(element);
+                getElements(index).setQuantite(element.getQuantite()-(currentElement.getValue() * qtt));
             } else {
                 System.out.println("Erreur, element inexistant");
             }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4bb6732f-b27c-47e3-a6ce-57fb53063b45\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;guillaume-helg&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"ed9e4069-344d-4b72-944b-42eb0a089310\" />\r\n        <option name=\"url\" value=\"https://github.com/guillaume-helg/NYX_Project.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2b1wj6Gt8J3If4QTSZTu5172wPH\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/GuillaumeHelg/IdeaProjects/NYX_Project/NYX/src&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.uml&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\\main\\java\\toulouse\\miage\\l3\\nyx\\controllers\" />\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\\main\\resources\\toulouse\\miage\\l3\\nyx\\style\" />\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\\main\\resources\\toulouse\\miage\\l3\\nyx\\fxml\" />\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\\main\\resources\\toulouse\\miage\\l3\\nyx\\image\" />\r\n      <recent name=\"C:\\Users\\GuillaumeHelg\\IdeaProjects\\NYX_Project\\NYX\\src\\main\\resources\\toulouse\\miage\\l3\\nyx\" />\r\n    </key>\r\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\r\n      <recent name=\"toulouse.miage.l3.nyx.controllers\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"toulouse.miage.l3.nyx.Main\" />\r\n      <module name=\"NYX\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"toulouse.miage.l3.nyx.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-17.0.9-corretto-17.0.9-3183f394aec4-8f899f12\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4bb6732f-b27c-47e3-a6ce-57fb53063b45\" name=\"Changes\" comment=\"\" />\r\n      <created>1705396026315</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1705396026315</updated>\r\n      <workItem from=\"1705396030438\" duration=\"1013000\" />\r\n      <workItem from=\"1705495289542\" duration=\"185000\" />\r\n      <workItem from=\"1705915508602\" duration=\"2688000\" />\r\n      <workItem from=\"1705921628048\" duration=\"2504000\" />\r\n      <workItem from=\"1705945858672\" duration=\"8859000\" />\r\n      <workItem from=\"1705955302076\" duration=\"1546000\" />\r\n      <workItem from=\"1706000208874\" duration=\"328000\" />\r\n      <workItem from=\"1706102781336\" duration=\"2600000\" />\r\n      <workItem from=\"1706110203168\" duration=\"10936000\" />\r\n      <workItem from=\"1706124958002\" duration=\"822000\" />\r\n      <workItem from=\"1706173808895\" duration=\"6594000\" />\r\n      <workItem from=\"1706184613546\" duration=\"2057000\" />\r\n      <workItem from=\"1706194849776\" duration=\"1059000\" />\r\n      <workItem from=\"1706208751653\" duration=\"4126000\" />\r\n      <workItem from=\"1706266079593\" duration=\"644000\" />\r\n      <workItem from=\"1706273290855\" duration=\"1389000\" />\r\n      <workItem from=\"1706277641712\" duration=\"1691000\" />\r\n      <workItem from=\"1706284662447\" duration=\"116000\" />\r\n      <workItem from=\"1706377106893\" duration=\"5906000\" />\r\n      <workItem from=\"1706384329850\" duration=\"4919000\" />\r\n      <workItem from=\"1706436787413\" duration=\"10827000\" />\r\n      <workItem from=\"1706464431948\" duration=\"259000\" />\r\n      <workItem from=\"1706512465207\" duration=\"2134000\" />\r\n      <workItem from=\"1706519392694\" duration=\"154000\" />\r\n      <workItem from=\"1706600641457\" duration=\"1476000\" />\r\n      <workItem from=\"1706728620476\" duration=\"2250000\" />\r\n      <workItem from=\"1706802960599\" duration=\"4586000\" />\r\n      <workItem from=\"1706914018819\" duration=\"872000\" />\r\n      <workItem from=\"1706915013661\" duration=\"1254000\" />\r\n      <workItem from=\"1706979001071\" duration=\"5355000\" />\r\n      <workItem from=\"1706991192271\" duration=\"4152000\" />\r\n      <workItem from=\"1707051786782\" duration=\"8075000\" />\r\n      <workItem from=\"1707158273217\" duration=\"8340000\" />\r\n      <workItem from=\"1707193797985\" duration=\"4419000\" />\r\n      <workItem from=\"1707199661533\" duration=\"1919000\" />\r\n      <workItem from=\"1707202920801\" duration=\"386000\" />\r\n      <workItem from=\"1707217025589\" duration=\"1232000\" />\r\n      <workItem from=\"1707218311300\" duration=\"2124000\" />\r\n      <workItem from=\"1707225599814\" duration=\"2047000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/.idea/workspace.xml	(date 1707588687145)
@@ -1,14 +1,36 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ArtifactsWorkspaceSettings">
+    <artifacts-to-build>
+      <artifact name="NYX_Project:jar" />
+    </artifacts-to-build>
+  </component>
   <component name="AutoImportSettings">
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
     <list default="true" id="4bb6732f-b27c-47e3-a6ce-57fb53063b45" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/NYX_Project.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/NYX_Project_jar.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/NYX_Project_jar2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/META-INF/MANIFEST.MF" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/NYX/Dockerfile" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/NYX/src/main/resources/META-INF/MANIFEST.MF" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/projet.pdf" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_2024_12_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_02_2024_12_18__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/NYX/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/AccueilController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Chaine.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/model/Usine.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java" beforeDir="false" afterPath="$PROJECT_DIR$/NYX/src/main/java/toulouse/miage/l3/nyx/core/service/Utils.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,6 +63,9 @@
       </UrlAndAccount>
     </option>
   </component>
+  <component name="KubernetesApiProvider">{
+  &quot;isMigrated&quot;: true
+}</component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -63,20 +88,33 @@
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
     &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;Docker.NYX/Dockerfile.executor&quot;: &quot;Run&quot;,
+    &quot;JAR Application.Unnamed.executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [clean].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [compile].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [deploy].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [install].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [package].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [site].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [test].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [validate].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.NYX [verify].executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;17&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/GuillaumeHelg/IdeaProjects/NYX_Project/NYX/src&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/GuillaumeHelg/.openjfx&quot;,
     &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.uml&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
@@ -86,17 +124,17 @@
       <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\GuillaumeHelg\Documents\project_docker\NYX_Project" />
       <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src\main\java\toulouse\miage\l3\nyx\controllers" />
       <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src\main\resources\toulouse\miage\l3\nyx\style" />
       <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src\main\resources\toulouse\miage\l3\nyx\fxml" />
       <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src\main\resources\toulouse\miage\l3\nyx\image" />
-      <recent name="C:\Users\GuillaumeHelg\IdeaProjects\NYX_Project\NYX\src\main\resources\toulouse\miage\l3\nyx" />
     </key>
     <key name="ExtractSuperBase.RECENT_KEYS">
       <recent name="toulouse.miage.l3.nyx.controllers" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="JAR Application.Unnamed">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="toulouse.miage.l3.nyx.Main" />
       <module name="NYX" />
@@ -110,16 +148,51 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="Unnamed" type="JarApplication" nameIsGenerated="true">
+      <option name="JAR_PATH" value="$PROJECT_DIR$/out/artifacts/NYX_Project_jar/NYX_Project.jar" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\jdk-21\lib&quot;" />
+      <option name="WORKING_DIRECTORY" value="C:\Users\GuillaumeHelg\Documents\project_docker\NYX_Project" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <module name="NYX_Project" />
+      <method v="2">
+        <option name="BuildArtifacts" enabled="true">
+          <artifact name="NYX_Project:jar" />
+        </option>
+      </method>
+    </configuration>
+    <configuration name="NYX/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
+      <deployment type="dockerfile">
+        <settings>
+          <option name="containerName" value="" />
+          <option name="sourceFilePath" value="NYX/Dockerfile" />
+        </settings>
+      </deployment>
+      <method v="2" />
+    </configuration>
+    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
+      <deployment type="dockerfile">
+        <settings />
+      </deployment>
+      <method v="2" />
+    </configuration>
+    <list>
+      <item itemvalue="Application.Main" />
+      <item itemvalue="Docker.NYX/Dockerfile" />
+      <item itemvalue="JAR Application.Unnamed" />
+    </list>
     <recent_temporary>
       <list>
         <item itemvalue="Application.Main" />
+        <item itemvalue="Docker.NYX/Dockerfile" />
       </list>
     </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
+        <option value="jdk-11.0.22-corretto-11.0.22-f644763e9732-4a89cc43" />
         <option value="jdk-17.0.9-corretto-17.0.9-3183f394aec4-8f899f12" />
+        <option value="jdk-21.0.2-openjdk-21.0.2-f644763e9732-c0c073db" />
       </set>
     </attachedChunks>
   </component>
@@ -170,6 +243,9 @@
       <workItem from="1707217025589" duration="1232000" />
       <workItem from="1707218311300" duration="2124000" />
       <workItem from="1707225599814" duration="2047000" />
+      <workItem from="1707339248930" duration="4085000" />
+      <workItem from="1707387232471" duration="3096000" />
+      <workItem from="1707400209580" duration="1329000" />
     </task>
     <servers />
   </component>
Index: META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/META-INF/MANIFEST.MF b/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1707341716030)
+++ b/META-INF/MANIFEST.MF	(date 1707341716030)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: toulouse.miage.l3.nyx.Main
+
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/NYX/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/.idea/misc.xml	(date 1707341945329)
@@ -9,7 +9,7 @@
     </option>
     <option name="workspaceImportForciblyTurnedOn" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package toulouse.miage.l3.nyx.controllers;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.stage.Stage;\r\nimport toulouse.miage.l3.nyx.core.model.Element;\r\nimport toulouse.miage.l3.nyx.core.service.SceneUtils;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static toulouse.miage.l3.nyx.core.model.Usine.elements;\r\n\r\npublic class InventaireController implements Initializable {\r\n    private Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n    @FXML\r\n    private TableView<Element> elementTableView;\r\n    @FXML\r\n    private TableColumn<Element, Integer> elementCode;\r\n    @FXML\r\n    private TableColumn<Element, String> elementNom;\r\n    @FXML\r\n    private TableColumn<Element, Double> elementPrixA;\r\n    @FXML\r\n    private TableColumn<Element, Double> elementPrixV;\r\n    @FXML\r\n    private TableColumn<Element, Double> elementQuantite;\r\n    @FXML\r\n    private TableColumn<Element, String> elementUnite;\r\n    @FXML\r\n    private TextField ajoutcode;\r\n    @FXML\r\n    private TextField ajoutnom;\r\n    @FXML\r\n    private TextField ajoutprixa;\r\n    @FXML\r\n    private TextField ajoutprixv;\r\n    @FXML\r\n    private TextField ajoutqte;\r\n    @FXML\r\n    private TextField ajoutunite;\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        elementCode.setCellValueFactory(new PropertyValueFactory<>(\"code\"));\r\n        elementNom.setCellValueFactory(new PropertyValueFactory<>(\"nom\"));\r\n        elementPrixA.setCellValueFactory(new PropertyValueFactory<>(\"prixAchat\"));\r\n        elementPrixV.setCellValueFactory(new PropertyValueFactory<>(\"prixVente\"));\r\n        elementQuantite.setCellValueFactory(new PropertyValueFactory<>(\"quantite\"));\r\n        elementUnite.setCellValueFactory(new PropertyValueFactory<>(\"uniteMesure\"));\r\n        elementTableView.setItems(elements);\r\n    }\r\n\r\n    public void goToAccueil(ActionEvent actionEvent) throws IOException {\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/accueil-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/accueil.css\", actionEvent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param actionEvent\r\n     */\r\n    public void goToChaineProduction(ActionEvent actionEvent) throws IOException {\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/chaineproduction-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/chaineproduction.css\", actionEvent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param actionEvent\r\n     */\r\n    public void goToInventaire(ActionEvent actionEvent) throws IOException {\r\n        SceneUtils.goToScene(\"/toulouse/miage/l3/nyx/fxml/inventaire-view.fxml\",\r\n                \"/toulouse/miage/l3/nyx/style/inventaire.css\", actionEvent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public void addElement(){\r\n        Element e = new Element(ajoutcode.getText(),ajoutnom.getText(),\r\n                Double.parseDouble(ajoutqte.getText()), ajoutunite.getText(),\r\n                Double.parseDouble(ajoutprixa.getText()), Double.parseDouble(ajoutprixv.getText()));\r\n        elements.add(e);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public void delElement(){\r\n        Element e = elementTableView.getSelectionModel().getSelectedItem();\r\n        elements.remove(e);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java b/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java
--- a/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java	(revision b555e7b5b552ee6c16cf2d7de316f806eaf394d6)
+++ b/NYX/src/main/java/toulouse/miage/l3/nyx/controllers/InventaireController.java	(date 1707387783340)
@@ -15,7 +15,7 @@
 import java.net.URL;
 import java.util.ResourceBundle;
 
-import static toulouse.miage.l3.nyx.core.model.Usine.elements;
+import static toulouse.miage.l3.nyx.core.model.Usine.*;
 
 public class InventaireController implements Initializable {
     private Stage stage;
@@ -56,7 +56,7 @@
         elementPrixV.setCellValueFactory(new PropertyValueFactory<>("prixVente"));
         elementQuantite.setCellValueFactory(new PropertyValueFactory<>("quantite"));
         elementUnite.setCellValueFactory(new PropertyValueFactory<>("uniteMesure"));
-        elementTableView.setItems(elements);
+        elementTableView.setItems(getElements());
     }
 
     public void goToAccueil(ActionEvent actionEvent) throws IOException {
@@ -89,7 +89,7 @@
         Element e = new Element(ajoutcode.getText(),ajoutnom.getText(),
                 Double.parseDouble(ajoutqte.getText()), ajoutunite.getText(),
                 Double.parseDouble(ajoutprixa.getText()), Double.parseDouble(ajoutprixv.getText()));
-        elements.add(e);
+        addToElements(e);
     }
 
     /**
@@ -97,6 +97,6 @@
      */
     public void delElement(){
         Element e = elementTableView.getSelectionModel().getSelectedItem();
-        elements.remove(e);
+        removeToElement(e);
     }
 }
Index: .idea/artifacts/NYX_Project_jar2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/NYX_Project_jar2.xml b/.idea/artifacts/NYX_Project_jar2.xml
new file mode 100644
--- /dev/null	(date 1707341829347)
+++ b/.idea/artifacts/NYX_Project_jar2.xml	(date 1707341829347)
@@ -0,0 +1,10 @@
+<component name="ArtifactManager">
+  <artifact type="jar" name="NYX_Project:jar2">
+    <output-path>$PROJECT_DIR$/out/artifacts/NYX_Project_jar2</output-path>
+    <root id="archive" name="NYX_Project.jar">
+      <element id="directory" name="META-INF">
+        <element id="file-copy" path="$PROJECT_DIR$/META-INF/MANIFEST.MF" />
+      </element>
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: .idea/NYX_Project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/NYX_Project.iml b/.idea/NYX_Project.iml
new file mode 100644
--- /dev/null	(date 1707339280226)
+++ b/.idea/NYX_Project.iml	(date 1707339280226)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1707339280285)
+++ b/.idea/compiler.xml	(date 1707339280285)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="NYX" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1707339280259)
+++ b/.idea/modules.xml	(date 1707339280259)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/NYX_Project.iml" filepath="$PROJECT_DIR$/.idea/NYX_Project.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1707339280319)
+++ b/.idea/jarRepositories.xml	(date 1707339280319)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1707339280299)
+++ b/.idea/encodings.xml	(date 1707339280299)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/NYX/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/NYX/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: NYX/src/main/resources/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/NYX/src/main/resources/META-INF/MANIFEST.MF b/NYX/src/main/resources/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1707340705072)
+++ b/NYX/src/main/resources/META-INF/MANIFEST.MF	(date 1707340705072)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: toulouse.miage.l3.nyx.Main
+
Index: .idea/artifacts/NYX_Project_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/NYX_Project_jar.xml b/.idea/artifacts/NYX_Project_jar.xml
new file mode 100644
--- /dev/null	(date 1707340710224)
+++ b/.idea/artifacts/NYX_Project_jar.xml	(date 1707340710224)
@@ -0,0 +1,16 @@
+<component name="ArtifactManager">
+  <artifact type="jar" name="NYX_Project:jar">
+    <output-path>$PROJECT_DIR$/out/artifacts/NYX_Project_jar</output-path>
+    <root id="archive" name="NYX_Project.jar">
+      <element id="module-output" name="NYX" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.6/javafx-fxml-17.0.6.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.6/javafx-base-17.0.6.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.6/javafx-controls-17.0.6-win.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.6/javafx-controls-17.0.6.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.6/javafx-graphics-17.0.6.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.6/javafx-graphics-17.0.6-win.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.6/javafx-base-17.0.6-win.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.6/javafx-fxml-17.0.6-win.jar" path-in-jar="/" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
